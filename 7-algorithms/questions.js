/*
  Реализовать функцию memoize, которая принимает в качестве аргумента функцию
  и возвращает мемоизированную функцию-обертку. Эта функция-обертка внутри вызывает
  переданную в memoize функцию, но при этом кэширует результат и при последующих вызовах
  с теми же аргументами возвращает результат из кэша.
  Вторым необязательным аргументом функция memoize принимает таймаут в миллисекундах,
  в течение которого данные хранятся в кэше.
*/

/* Есть строка из каких-то символов.
 Нужно разбить ее на максимальное количество подстрок так,
 чтобы каждый символ встречался только в одной подстроке
 Пример:
  console.log(divideString('abcadfef'))
  > [ 'abca', 'd', 'fef' ]
  
  console.log(divideString('abacdabcdafec'))
  > [ 'abacdabcdafec' ]
  
  console.log(divideString('aabbccdd'))
  > [ 'aa', 'bb', 'cc', 'dd' ]
  
  console.log(divideString('fafabcdef'));
  > [ 'fafabcdef' ]
  
  console.log(divideString('abcdefghijklmnopqrstuvwxyzgd'));
  > [ 'a', 'b', 'c', 'defghijklmnopqrstuvwxyzgd' ]
 */

/*
Есть массив из ноликов и единичек.
Найти самую длинную последовательность единичек в нем,
при условии, что из массива точно нужно будет выкинуть один элемент
 */

